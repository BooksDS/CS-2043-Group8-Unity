<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/jaspe/wkspaces/CS-2043-Group-8_2/SQLLiteTutorialProject/Housing_Database.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="4359"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,12:mainTRANSACTIONS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="FURNITURE" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="110"/><column index="3" value="115"/><column index="4" value="111"/><column index="5" value="114"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="FURNITURE_PLUS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="111"/><column index="3" value="114"/><column index="4" value="210"/><column index="5" value="116"/><column index="6" value="115"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ROOM_PLUS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="115"/><column index="2" value="110"/><column index="3" value="52"/><column index="4" value="116"/><column index="5" value="153"/><column index="6" value="116"/><column index="7" value="210"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="STUDENT_HIST" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="162"/><column index="2" value="162"/><column index="3" value="122"/><column index="4" value="110"/><column index="5" value="115"/><column index="6" value="95"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="STUDENT_PLUS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="283"/><column index="2" value="122"/><column index="3" value="210"/><column index="4" value="116"/><column index="5" value="115"/><column index="6" value="182"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="TRANSACTIONS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="245"/><column index="2" value="469"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- CS 2043 Project
=======
<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/jaspe/wkspaces/CS-2043-Group-8_2/SQLLiteTutorialProject/Housing_Database.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="4359"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:mainFURNITURE"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="FURNITURE" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="110"/><column index="3" value="115"/><column index="4" value="111"/><column index="5" value="114"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="TRANSACTIONS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="162"/><column index="2" value="601"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- CS 2043 Project
>>>>>>> 5a5bc6b887ac3ca15a46a9d57c571e4dbac0601a
DROP VIEW IF EXISTS KEY_HIST;
DROP VIEW IF EXISTS KEYS_AVAIL;
DROP VIEW IF EXISTS STUDENT_BLACKLIST;
DROP VIEW IF EXISTS FURNITURE_PLUS;
DROP VIEW IF EXISTS STUDENT_PLUS;
DROP VIEW IF EXISTS RES_PLUS;
DROP VIEW IF EXISTS ROOM_PLUS;
DROP TABLE IF EXISTS TRANSACTIONS;
DROP TABLE IF EXISTS STUDENT_HIST;
DROP TRIGGER IF EXISTS Occ_Limit;
DROP TABLE IF EXISTS STUDENT;
DROP TABLE IF EXISTS FURNITURE;
DROP TABLE IF EXISTS ROOM_KEY;
DROP TABLE IF EXISTS ROOM;
DROP TABLE IF EXISTS RESIDENCE;
-- DROP TABLE IF EXISTS LOGIN;

/*
CREATE TABLE LOGIN(
USER_NAME TEXT PRIMARY KEY,
PASS_HASH TEXT NOT NULL
);

INSERT INTO LOGIN VALUES('admin','password123');
*/

CREATE TABLE RESIDENCE(
BLDG_NUM INTEGER PRIMARY KEY,
BLDG_NAME VARCHAR(100) NOT NULL UNIQUE,
BLDG_ABBV VARCHAR(5) NOT NULL UNIQUE, -- Building's abbreviation, mainly used for room numbers
BLDG_ADDR VARCHAR(100) NOT NULL,
BLDG_POSTCODE VARCHAR(7) NOT NULL
);


-- Modification made on Nov. 7: ROOM table now uses a composite primary key. This is done so that rooms in different buildings don't need to have unique numbers.
-- This also required some modifications to the STUDENT table's foreign keys

CREATE TABLE ROOM(
ROOM_NUM INTEGER NOT NULL,
BLDG_NUM INTEGER NOT NULL,
SIZE INTEGER NOT NULL,
OCCUPANCY INTEGER NOT NULL,
PRIMARY KEY(ROOM_NUM, BLDG_NUM),
CONSTRAINT fk_RoomNum_BldgNum
	FOREIGN KEY(BLDG_NUM)
	REFERENCES RESIDENCE(BLDG_NUM)
);

CREATE TABLE ROOM_KEY(
KEY_NUM INTEGER PRIMARY KEY,
BLDG_NUM INTEGER NOT NULL,
ROOM_NUM INTEGER NOT NULL,
-- KEY_TYPE VARCHAR(25) NOT NULL, -- This isn't necessary
FOREIGN KEY (ROOM_NUM, BLDG_NUM) REFERENCES ROOM(ROOM_NUM, BLDG_NUM)
);


CREATE TABLE FURNITURE(
FURN_ID INTEGER PRIMARY KEY,
BLDG_NUM INTEGER NOT NULL,
ROOM_NUM INTEGER NOT NULL,
FURN_TYPE VARCHAR(50) NOT NULL CHECK((FURN_TYPE = 'CHAIR') OR (FURN_TYPE = 'TABLE') OR (FURN_TYPE = 'DESK') OR FURN_TYPE = 'BED'), -- CHAIR, TABLE, DESK, BED, ETC.check
FURN_DESC VARCHAR(100) NOT NULL,
FOREIGN KEY (ROOM_NUM, BLDG_NUM) REFERENCES ROOM(ROOM_NUM, BLDG_NUM)
);

CREATE TABLE STUDENT(
STUDENT_ID INTEGER PRIMARY KEY,
BLDG_NUM INTEGER,
ROOM_NUM INTEGER,
STUDENT_NAME VARCHAR(100) NOT NULL,
STUDENT_ELIGIBLE BOOLEAN NOT NULL,
STUDENT_ELIGREASON VARCHAR(100),
KEY_NUM INTEGER UNIQUE,
FOREIGN KEY (BLDG_NUM) REFERENCES RESIDENCE(BLDG_NUM),
FOREIGN KEY (ROOM_NUM, BLDG_NUM) REFERENCES ROOM(ROOM_NUM, BLDG_NUM) -- This is weird but I think it's necessary since ROOM has a composite primary key.
FOREIGN KEY (KEY_NUM) REFERENCES ROOM_KEY(KEY_NUM)
);

-- I want to create a trigger where students can't be added to rooms that have exceeded their occupancy limit
-- But I can't figure out how

CREATE TABLE STUDENT_HIST(
MOVE_IN_DATE DATE,
MOVE_OUT_DATE DATE,
STUDENT_ID INTEGER,
BLDG_NUM INTEGER NOT NULL,
ROOM_NUM INTEGER NOT NULL,
KEY_NUM INTEGER NOT NULL,
FOREIGN KEY (BLDG_NUM) REFERENCES RESIDENCE(BLDG_NUM),
FOREIGN KEY (ROOM_NUM) REFERENCES ROOM(ROOM_NUM),
PRIMARY KEY(MOVE_IN_DATE, MOVE_OUT_DATE, STUDENT_ID)
);

CREATE TABLE TRANSACTIONS(
TIMESTAMP DATE,
LOG VARCHAR(50)
);



INSERT INTO RESIDENCE VALUES (1, 'John Doe Residence', 'JDR', '1234 Somewhere Road', 'E5J 1M5');
INSERT INTO RESIDENCE VALUES (2, 'Santa Claus Residence', 'SCR', '1225 North Pole Ave', 'H0H 0H0');
INSERT INTO RESIDENCE VALUES (3, 'Sir James Dunn Residence', 'SJDR', '100 Tucker Park Road', 'E2K 5E2');
INSERT INTO RESIDENCE VALUES (4, 'Mackenzie House', 'MH', '43 MacKay Dr', 'E3B 2T5');
INSERT INTO RESIDENCE VALUES (5, 'Sherlock Holmes Residence', 'SHR', '221B Baker Street', 'NW1 6XE'); 

-- PLACEHOLDER ROOMS
-- (Replace with stored procedure or Java code to automatically generate rooms later
-- room num, bldg num, size, occupancy
INSERT INTO ROOM VALUES (1, 1, 16, 1);
INSERT INTO ROOM VALUES (2, 1, 16, 1);
INSERT INTO ROOM VALUES (3, 1, 20, 2);
INSERT INTO ROOM VALUES (4, 1, 20, 2);


INSERT INTO ROOM VALUES (1, 2, 15, 1);
INSERT INTO ROOM VALUES (2, 2, 15, 1);
INSERT INTO ROOM VALUES (3, 2, 18, 2);
INSERT INTO ROOM VALUES (4, 2, 18, 2);

INSERT INTO ROOM VALUES (1, 3, 20, 2);
INSERT INTO ROOM VALUES (2, 3, 20, 2);
INSERT INTO ROOM VALUES (3, 3, 20, 2);
INSERT INTO ROOM VALUES (4, 3, 20, 2);
INSERT INTO ROOM VALUES (5, 3, 25, 3);
INSERT INTO ROOM VALUES (6, 3, 25, 3);

INSERT INTO ROOM VALUES (1, 4, 15, 1);
INSERT INTO ROOM VALUES (2, 4, 15, 1);
INSERT INTO ROOM VALUES (3, 4, 20, 2);
INSERT INTO ROOM VALUES (4, 4, 20, 2);
INSERT INTO ROOM VALUES (5, 4, 25, 2);

INSERT INTO ROOM VALUES (1, 5, 15, 1);
INSERT INTO ROOM VALUES (2, 5, 15, 1);
INSERT INTO ROOM VALUES (3, 5, 20, 2);
INSERT INTO ROOM VALUES (4, 5, 20, 2);
INSERT INTO ROOM VALUES (5, 5, 25, 2);
INSERT INTO ROOM VALUES (6, 5, 25, 2);

-- (STUDENT_ID, BLDG_NUM, ROOM_NUM, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)

/*
INSERT INTO STUDENT VALUES(3371610, 1, 1, 'ANDREW OCONNOR', TRUE, 'N/A');
INSERT INTO STUDENT (STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
 VALUES(3371610, 'ANDREW OCONNOR', TRUE, 'ACADEMIC INTEGRITY VIOLATION');
INSERT INTO STUDENT VALUES(8675309, 2, 3, 'JENNY NUMBER', TRUE, 'N/A');
INSERT INTO STUDENT VALUES(9071981, 3, 1, 'MARIO MARIO', TRUE, 'N/A');
INSERT INTO STUDENT VALUES(4041983, 3, 1, 'LUIGI MARIO', TRUE, 'N/A');
*/

-- Creating students without rooms

INSERT INTO STUDENT (STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
	VALUES(3371610, 'ANDREW OCONNOR', TRUE, 'N/A');
	
INSERT INTO STUDENT (STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
	VALUES(8675309, 'JENNY NUMBER', TRUE, 'N/A');
	
INSERT INTO STUDENT(STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
	VALUES(9071981, 'MARIO MARIO', TRUE, 'N/A');

INSERT INTO STUDENT(STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
	VALUES(4041983, 'LUIGI MARIO', TRUE, 'N/A');

INSERT INTO STUDENT (STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
	VALUES(7212000, 'WALUIGI', FALSE, 'ACADEMIC INTEGRITY VIOLATION');
	
INSERT INTO STUDENT (STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
	VALUES(3529271, 'DEVIN CAMPBELL', TRUE, 'N/A');
	
INSERT INTO STUDENT (STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
	VALUES(3714415, 'CALEB CARR', TRUE, 'N/A');
	
INSERT INTO STUDENT (STUDENT_ID, STUDENT_NAME, STUDENT_ELIGIBLE, STUDENT_ELIGREASON)
	VALUES(2211887, 'SHERLOCK HOLMES', TRUE, 'N/A');
	

-- BUILDING 1
INSERT INTO FURNITURE VALUES(1, 1, 1, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(2, 1, 2, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(3, 1, 3, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(4, 1, 4, 'CHAIR', 'Wooden chair');

INSERT INTO FURNITURE VALUES(5, 1, 1, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(6, 1, 2, 'BED', 'Single bed');

-- INSERTING 2 beds into the double rooms
INSERT INTO FURNITURE VALUES(7, 1, 3, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(8, 1, 3, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(9, 1, 4, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(10, 1, 4, 'BED', 'Single bed');
<<<<<<< HEAD

INSERT INTO FURNITURE VALUES(11, 1, 1, 'CHAIR', 'Recliner');
--desks
=======

INSERT INTO FURNITURE VALUES(11, 1, 1, 'CHAIR', 'Recliner');
--desks
>>>>>>> 5a5bc6b887ac3ca15a46a9d57c571e4dbac0601a

INSERT INTO FURNITURE VALUES(12, 1, 1, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(13, 1, 2, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(14, 1, 3, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(15, 1, 4, 'DESK', 'Single Desk');


-- Building 2
-- chairs
INSERT INTO FURNITURE VALUES(16, 2, 1, 'CHAIR', 'Office chair');
INSERT INTO FURNITURE VALUES(17, 2, 2, 'CHAIR', 'Office chair');
INSERT INTO FURNITURE VALUES(18, 2, 3, 'CHAIR', 'Office chair');
INSERT INTO FURNITURE VALUES(19, 2, 4, 'CHAIR', 'Office chair');

-- beds

INSERT INTO FURNITURE VALUES(20, 2, 1, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(21, 2, 2, 'BED', 'Single bed');

-- INSERTING 2 beds into the double rooms
INSERT INTO FURNITURE VALUES(22, 2, 3, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(23, 2, 3, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(24, 2, 4, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(25, 2, 4, 'BED', 'Single bed');

-- desks
INSERT INTO FURNITURE VALUES(26, 2, 1, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(27, 2, 2, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(28, 2, 3, 'DESK', 'Single Desk');
<<<<<<< HEAD
INSERT INTO FURNITURE VALUES(29, 2, 4, 'DESK', 'Single Desk');

-- Building 3

-- chairs

INSERT INTO FURNITURE VALUES(30, 3, 1, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(31, 3, 2, 'CHAIR', 'Office chair');
INSERT INTO FURNITURE VALUES(32, 3, 3, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(33, 3, 4, 'CHAIR', 'Office chair');
INSERT INTO FURNITURE VALUES(34, 3, 5, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(35, 3, 6, 'CHAIR', 'Office chair');

-- beds

INSERT INTO FURNITURE VALUES(36, 3, 1, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(37, 3, 1, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(38, 3, 2, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(39, 3, 2, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(40, 3, 3, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(41, 3, 3, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(42, 3, 4, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(43, 3, 4, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(44, 3, 5, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(45, 3, 5, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(46, 3, 5, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(47, 3, 6, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(48, 3, 6, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(49, 3, 6, 'BED', 'Single Bed');


INSERT INTO FURNITURE VALUES(50, 3, 1, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(51, 3, 2, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(52, 3, 3, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(53, 3, 4, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(54, 3, 5, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(55, 3, 6, 'DESK', 'Large Desk');


-- Building 4
INSERT INTO FURNITURE VALUES(56, 4, 1, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(57, 4, 2, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(58, 4, 3, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(59, 4, 4, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(60, 4, 5, 'CHAIR', 'Wooden chair');

INSERT INTO FURNITURE VALUES(61, 4, 1, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(62, 4, 2, 'BED', 'Single bed');

-- INSERTING 2 beds into the double rooms
INSERT INTO FURNITURE VALUES(63, 4, 3, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(64, 4, 3, 'BED', 'Single bed');

INSERT INTO FURNITURE VALUES(65, 4, 4, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(66, 4, 4, 'BED', 'Single bed');

INSERT INTO FURNITURE VALUES(67, 4, 5, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(68, 4, 5, 'BED', 'Single bed');


--desks
INSERT INTO FURNITURE VALUES(69, 4, 1, 'DESK', 'Nice Desk');
INSERT INTO FURNITURE VALUES(70, 4, 2, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(71, 4, 3, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(72, 4, 4, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(73, 4, 5, 'DESK', 'Single Desk');

-- Building 5
INSERT INTO FURNITURE VALUES(74, 4, 1, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(75, 4, 2, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(76, 4, 3, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(77, 4, 4, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(78, 4, 5, 'CHAIR', 'Wooden chair');

INSERT INTO FURNITURE VALUES(79, 4, 1, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(80, 4, 2, 'BED', 'Single bed');

-- INSERTING 2 beds into the double rooms
INSERT INTO FURNITURE VALUES(81, 5, 3, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(82, 5, 3, 'BED', 'Single bed');

INSERT INTO FURNITURE VALUES(83, 5, 4, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(84, 5, 4, 'BED', 'Single bed');

INSERT INTO FURNITURE VALUES(85, 5, 5, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(86, 5, 5, 'BED', 'Single bed');


--desks
INSERT INTO FURNITURE VALUES(87, 5, 1, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(88, 5, 2, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(89, 5, 3, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(90, 5, 4, 'DESK', 'Single Desk');
=======
INSERT INTO FURNITURE VALUES(29, 2, 4, 'DESK', 'Single Desk');

-- Building 3

-- chairs

INSERT INTO FURNITURE VALUES(30, 3, 1, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(31, 3, 2, 'CHAIR', 'Office chair');
INSERT INTO FURNITURE VALUES(32, 3, 3, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(33, 3, 4, 'CHAIR', 'Office chair');
INSERT INTO FURNITURE VALUES(34, 3, 5, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(35, 3, 6, 'CHAIR', 'Office chair');

-- beds

INSERT INTO FURNITURE VALUES(36, 3, 1, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(37, 3, 1, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(38, 3, 2, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(39, 3, 2, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(40, 3, 3, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(41, 3, 3, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(42, 3, 4, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(43, 3, 4, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(44, 3, 5, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(45, 3, 5, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(46, 3, 5, 'BED', 'Single Bed');

INSERT INTO FURNITURE VALUES(47, 3, 6, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(48, 3, 6, 'BED', 'Single Bed');
INSERT INTO FURNITURE VALUES(49, 3, 6, 'BED', 'Single Bed');


INSERT INTO FURNITURE VALUES(50, 3, 1, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(51, 3, 2, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(52, 3, 3, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(53, 3, 4, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(54, 3, 5, 'DESK', 'Large Desk');
INSERT INTO FURNITURE VALUES(55, 3, 6, 'DESK', 'Large Desk');


-- Building 4
INSERT INTO FURNITURE VALUES(56, 4, 1, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(57, 4, 2, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(58, 4, 3, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(59, 4, 4, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(60, 4, 5, 'CHAIR', 'Wooden chair');

INSERT INTO FURNITURE VALUES(61, 4, 1, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(62, 4, 2, 'BED', 'Single bed');

-- INSERTING 2 beds into the double rooms
INSERT INTO FURNITURE VALUES(63, 4, 3, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(64, 4, 3, 'BED', 'Single bed');

INSERT INTO FURNITURE VALUES(65, 4, 4, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(66, 4, 4, 'BED', 'Single bed');

INSERT INTO FURNITURE VALUES(67, 4, 5, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(68, 4, 5, 'BED', 'Single bed');


--desks
INSERT INTO FURNITURE VALUES(69, 4, 1, 'DESK', 'Nice Desk');
INSERT INTO FURNITURE VALUES(70, 4, 2, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(71, 4, 3, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(72, 4, 4, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(73, 4, 5, 'DESK', 'Single Desk');

-- Building 5
INSERT INTO FURNITURE VALUES(74, 4, 1, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(75, 4, 2, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(76, 4, 3, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(77, 4, 4, 'CHAIR', 'Wooden chair');
INSERT INTO FURNITURE VALUES(78, 4, 5, 'CHAIR', 'Wooden chair');

INSERT INTO FURNITURE VALUES(79, 4, 1, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(80, 4, 2, 'BED', 'Single bed');

-- INSERTING 2 beds into the double rooms
INSERT INTO FURNITURE VALUES(81, 5, 3, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(82, 5, 3, 'BED', 'Single bed');

INSERT INTO FURNITURE VALUES(83, 5, 4, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(84, 5, 4, 'BED', 'Single bed');

INSERT INTO FURNITURE VALUES(85, 5, 5, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(86, 5, 5, 'BED', 'Single bed');


--desks
INSERT INTO FURNITURE VALUES(87, 5, 1, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(88, 5, 2, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(89, 5, 3, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(90, 5, 4, 'DESK', 'Single Desk');
>>>>>>> 5a5bc6b887ac3ca15a46a9d57c571e4dbac0601a
INSERT INTO FURNITURE VALUES(91, 5, 5, 'DESK', 'Single Desk');
 



-- PLACEHOLDER KEY

-- Building 1
INSERT INTO ROOM_KEY VALUES(1, 1, 1);

INSERT INTO ROOM_KEY VALUES(2, 1, 2);

INSERT INTO ROOM_KEY VALUES(3, 1, 3);
INSERT INTO ROOM_KEY VALUES(4, 1, 3);

INSERT INTO ROOM_KEY VALUES(5, 1, 4);
INSERT INTO ROOM_KEY VALUES(6, 1, 4);

-- Building 2
INSERT INTO ROOM_KEY VALUES(7, 2, 1);

INSERT INTO ROOM_KEY VALUES(8, 2, 2);

INSERT INTO ROOM_KEY VALUES(9, 2, 3);
INSERT INTO ROOM_KEY VALUES(10, 2, 3);

INSERT INTO ROOM_KEY VALUES(11, 2, 4);
INSERT INTO ROOM_KEY VALUES(12, 2, 4);

-- Building 3
INSERT INTO ROOM_KEY VALUES(13, 3, 1);
INSERT INTO ROOM_KEY VALUES(14, 3, 1);

INSERT INTO ROOM_KEY VALUES(15, 3, 2);
INSERT INTO ROOM_KEY VALUES(16, 3, 2);

INSERT INTO ROOM_KEY VALUES(17, 3, 3);
INSERT INTO ROOM_KEY VALUES(18, 3, 3);

INSERT INTO ROOM_KEY VALUES(19, 3, 4);
INSERT INTO ROOM_KEY VALUES(20, 3, 4);

INSERT INTO ROOM_KEY VALUES(22, 3, 5);
INSERT INTO ROOM_KEY VALUES(23, 3, 5);
INSERT INTO ROOM_KEY VALUES(24, 3, 5);

INSERT INTO ROOM_KEY VALUES(25, 3, 6);
INSERT INTO ROOM_KEY VALUES(26, 3, 6);
INSERT INTO ROOM_KEY VALUES(27, 3, 6);

-- Building 4
INSERT INTO ROOM_KEY VALUES(28, 4, 1);

INSERT INTO ROOM_KEY VALUES(29, 4, 2);

INSERT INTO ROOM_KEY VALUES(30, 4, 3);
INSERT INTO ROOM_KEY VALUES(31, 4, 3);

INSERT INTO ROOM_KEY VALUES(32, 4, 4);
INSERT INTO ROOM_KEY VALUES(33, 4, 4);

INSERT INTO ROOM_KEY VALUES(34, 4, 5);
INSERT INTO ROOM_KEY VALUES(35, 4, 5);

-- Building 5
INSERT INTO ROOM_KEY VALUES(36, 5, 1);

INSERT INTO ROOM_KEY VALUES(37, 5, 2);

INSERT INTO ROOM_KEY VALUES(38, 5, 3);
INSERT INTO ROOM_KEY VALUES(39, 5, 3);

INSERT INTO ROOM_KEY VALUES(40, 5, 4);
INSERT INTO ROOM_KEY VALUES(41, 5, 4);

INSERT INTO ROOM_KEY VALUES(42, 5, 5);
INSERT INTO ROOM_KEY VALUES(43, 5, 5);

INSERT INTO ROOM_KEY VALUES(44, 5, 6);
INSERT INTO ROOM_KEY VALUES(45, 5, 6);


create view ROOM_PLUS as
	select ROOM.ROOM_NUM, ROOM.BLDG_NUM, SIZE, OCCUPANCY, COUNT(STUDENT_ID) as NUM_STUDENTS, RESIDENCE.BLDG_ABBV, RESIDENCE.BLDG_NAME
	from (ROOM inner join RESIDENCE on ROOM.BLDG_NUM = RESIDENCE.BLDG_NUM) left join STUDENT on (ROOM.ROOM_NUM = STUDENT.ROOM_NUM and ROOM.BLDG_NUM = STUDENT.BLDG_NUM)
	group by ROOM.ROOM_NUM, ROOM.BLDG_NUM, SIZE, OCCUPANCY;
	
create view RES_PLUS as
	select RESIDENCE.BLDG_NAME, RESIDENCE.BLDG_ADDR, RESIDENCE.BLDG_POSTCODE, COUNT(STUDENT_ID) as NUM_STUDENTS, SUM(OCCUPANCY) as OCCUPANCY, RESIDENCE.BLDG_NUM
	from(RESIDENCE inner join ROOM on ROOM.BLDG_NUM = RESIDENCE.BLDG_NUM) left join STUDENT on (ROOM.ROOM_NUM = STUDENT.ROOM_NUM and ROOM.BLDG_NUM = STUDENT.BLDG_NUM)
	group by RESIDENCE.BLDG_NUM;
	
create view STUDENT_PLUS as
	select STUDENT.STUDENT_NAME, STUDENT.STUDENT_ID, RESIDENCE.BLDG_NAME, RESIDENCE.BLDG_ABBV, STUDENT.ROOM_NUM, STUDENT.STUDENT_ELIGIBLE
	from STUDENT left join RESIDENCE on STUDENT.BLDG_NUM = RESIDENCE.BLDG_NUM;
	
create view FURNITURE_PLUS as
	select FURNITURE.FURN_ID, FURNITURE.FURN_TYPE, FURNITURE.FURN_DESC, ROOM_PLUS.BLDG_NAME, ROOM_PLUS.BLDG_ABBV, FURNITURE.ROOM_NUM 
	from (FURNITURE inner join ROOM_PLUS on (FURNITURE.BLDG_NUM = ROOM_PLUS.BLDG_NUM AND FURNITURE.ROOM_NUM = ROOM_PLUS.ROOM_NUM));
	
create view STUDENT_BLACKLIST as
	select STUDENT_NAME, STUDENT_ID, STUDENT_ELIGREASON
	from STUDENT
	where STUDENT_ELIGIBLE = false;
	
-- This shows a list of the available keys that are not already assigned to students)
create view KEYS_AVAIL as
	select * from ROOM_KEY
	where KEY_NUM not in
		(select ROOM_KEY.KEY_NUM from ROOM_KEY inner join STUDENT on ROOM_KEY.KEY_NUM = STUDENT.KEY_NUM);
		
-- Key history table
create view KEY_HIST as
    select STUDENT_HIST.KEY_NUM, STUDENT_HIST.BLDG_NUM, RESIDENCE.BLDG_ABBV, STUDENT_HIST.ROOM_NUM, STUDENT.STUDENT_NAME, STUDENT.STUDENT_ID, STUDENT_HIST.MOVE_IN_DATE, STUDENT_HIST.MOVE_OUT_DATE
    from STUDENT_HIST join STUDENT on (STUDENT_HIST.STUDENT_ID = STUDENT.STUDENT_ID) join RESIDENCE on (RESIDENCE.BLDG_NUM = STUDENT_HIST.BLDG_NUM);
	






</sql><sql name="TestQueries">select BLDG_ABBV, ROOM_NUM, SIZE, NUM_STUDENTS, OCCUPANCY from ROOM_PLUS where BLDG_NUM = 1;

select MOVE_IN_DATE, MOVE_OUT_DATE, STUDENT_ID, KEY_NUM from (STUDENT_HIST left join RESIDENCE on STUDENT_HIST.BLDG_NUM = RESIDENCE.BLDG_NUM) where (BLDG_ABBV = &quot;JDR&quot; and ROOM_NUM = 2);

update STUDENT 
set BLDG_NUM = NULL, ROOM_NUM = NULL, KEY_NUM = NULL
WHERE STUDENT_ID = 3371610;


-- furniture ID, bldg num, room num
INSERT INTO FURNITURE VALUES(7, 1, 1, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(2, 1, 2, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(3, 1, 3, 'DESK', 'Single Desk');
INSERT INTO FURNITURE VALUES(4, 1, 4, 'DESK', 'Single Desk');

INSERT INTO FURNITURE VALUES(5, 1, 1, 'BED', 'Single bed');
INSERT INTO FURNITURE VALUES(6, 1, 2, 'BED', 'Single bed');

/*
UPDATE STUDENT
SET BLDG_NUM = 1, ROOM_NUM = 1, KEY_NUM = 1
WHERE STUDENT_ID = 3371610;


UPDATE STUDENT
SET BLDG_NUM = 1, ROOM_NUM = 2, KEY_NUM = (select KEY_NUM from KEYS_AVAIL where BLDG_NUM = 1 and ROOM_NUM = 2 limit 1)
WHERE STUDENT_ID = 8675309;
	
*/
/*
--Test statements
	
select * from ROOM_PLUS where BLDG_NUM = 2;

select * from RESIDENCE inner join ROOM on RESIDENCE.BLDG_NUM = ROOM.BLDG_NUM where RESIDENCE.BLDG_NUM = 3;

select * from STUDENT;

-- get the number of rooms in each residence
select COUNT(ROOM_NUM)
from (RESIDENCE inner join ROOM on RESIDENCE.BLDG_NUM = ROOM.BLDG_NUM)
where(RESIDENCE.BLDG_NUM = 3);

-- get the list of students in John Doe res
select STUDENT_NAME
from (RESIDENCE inner join STUDENT on RESIDENCE.BLDG_NUM = STUDENT.BLDG_NUM)
where RESIDENCE.BLDG_NUM = 2;

select * from STUDENT_PLUS;

select ROOM_KEY.KEY_NUM from ROOM_KEY inner join STUDENT on ROOM_KEY.KEY_NUM = STUDENT.KEY_NUM;

*/</sql><current_tab id="1"/></tab_sql></sqlb_project>
